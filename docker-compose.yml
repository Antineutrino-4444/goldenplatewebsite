version: '3.8'

services:
  # Golden Plate Recorder Application
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:///data/golden_plate_recorder.db
      - SECRET_KEY=your-secret-key-change-this
    volumes:
      - ./data:/app/data
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - golden-plate-network

  # PostgreSQL Database (optional - comment out if using SQLite)
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=golden_plate_recorder
      - POSTGRES_USER=gpr_user
      - POSTGRES_PASSWORD=secure_password_change_this
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - golden-plate-network

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - golden-plate-network

volumes:
  postgres_data:

networks:
  golden-plate-network:
    driver: bridge

---
# Alternative configuration for SQLite only (simpler)
version: '3.8'

services:
  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:///data/golden_plate_recorder.db
      - SECRET_KEY=your-secret-key-change-this
    volumes:
      - ./data:/app/data
    restart: unless-stopped

